"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.doubleMetaphoneMatch = exports.metaphoneMatch = exports.metaphone = exports.doubleMetaphone = exports.soundexMatch = exports.soundex = void 0;
const soundex_1 = __importDefault(require("./phonetics/soundex"));
const metaphone_1 = __importDefault(require("./phonetics/metaphone"));
const double_metaphone_1 = __importDefault(require("./phonetics/double-metaphone"));
function soundex(text) {
    const soundexObj = new soundex_1.default();
    return soundexObj.getPhoneticString(text);
}
exports.soundex = soundex;
function metaphone(text) {
    const metaphoneObj = new metaphone_1.default();
    return metaphoneObj.getPhoneticString(text);
}
exports.metaphone = metaphone;
function doubleMetaphone(text) {
    const doubleMetaphoneObj = new double_metaphone_1.default();
    return doubleMetaphoneObj.getPhoneticString(text);
}
exports.doubleMetaphone = doubleMetaphone;
function soundexMatch(text1, text2) {
    const soundexObj = new soundex_1.default();
    return soundexObj.isPhoneticMatch(text1, text2);
}
exports.soundexMatch = soundexMatch;
function metaphoneMatch(text1, text2) {
    const metaphoneObj = new metaphone_1.default();
    return metaphoneObj.isPhoneticMatch(text1, text2);
}
exports.metaphoneMatch = metaphoneMatch;
function doubleMetaphoneMatch(text1, text2) {
    const doubleMetaphoneObj = new double_metaphone_1.default();
    return doubleMetaphoneObj.isPhoneticMatch(text1, text2);
}
exports.doubleMetaphoneMatch = doubleMetaphoneMatch;
